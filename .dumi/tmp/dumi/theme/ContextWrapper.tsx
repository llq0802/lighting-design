// @ts-nocheck
// This file is generated by Umi automatically
// DO NOT CHANGE IT MANUALLY!
import React, { useState, useEffect, useRef } from 'react';
import { useOutlet, history } from 'dumi';
import { warning } from 'D:/MyWeb/KaiYuan/lighting-design-v2/node_modules/.pnpm/rc-util@5.44.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/rc-util';
import { SiteContext, type ISiteContext } from 'D:/MyWeb/KaiYuan/lighting-design-v2/node_modules/.pnpm/dumi@2.4.18_@babel+core@7.26.10_@swc+helpers@0.5.1_@types+node@20.5.1_@types+react@18.3.19_es_oqokus36eealj6kz36sgvripbq/node_modules/dumi/dist/client/theme-api/context.js';
import { components } from '../meta/atoms';
import { locales } from '../locales/config';



const entryExports = {
};

// Static content
const pkg = {"name":"lighting-design","description":"🎨 Lighting Design 是一款使用 TypeScript + React 编写的实用业务组件库。","version":"2.2.0","license":"MIT","repository":{"type":"git","url":"https://github.com/llq0802/lighting-design"},"author":"李岚清 llq0802 <958614130@qq.com>"};
const historyType = "browser";
const hostname = undefined;
const themeConfig = {"footer":"Open-source MIT Licensed | Copyright © 2020-present Powered by llq0802","prefersColor":{"default":"light","switch":true},"nprogress":true,"lastUpdated":false,"name":"Lighting Design","logo":"/logo.png","socialLinks":{"github":"https://github.com/llq0802/lighting-design/tree/v2"},"rtl":true,"nav":[{"title":"指南","link":"/guide"},{"title":"组件","link":"/components"},{"title":"更多场景","link":"/scene"},{"title":"rc-use-hooks","link":"https://llq0802.github.io/rc-use-hook/"},{"title":"V1.x","link":"https://llq0802.github.io/lighting-design/v1/"},{"title":"GitHub","link":"https://github.com/llq0802/lighting-design/tree/v2"},{"title":"*更新日志 - V2.1.35","link":"https://github.com/llq0802/lighting-design/releases"}],"sidebar":{"/components":[{"children":[{"title":"组件总览","link":"/components"}]},{"title":"基础组件","children":[{"title":"LCaptchaButton-按钮倒计时","link":"/components/captcha-button"},{"title":"LFileViewer-文件预览器","link":"/components/file-viewer"},{"title":"LNumberRoll-数值加载器","link":"/components/number-roll"},{"title":"LTrigger-弹出选择","link":"/components/trigger"},{"title":"LCardGroup-卡片选择","link":"/components/card-group"},{"title":"LTagGroup-标签选择","link":"/components/tag-group"},{"title":"LSliderVerify-前端滑块验证","link":"/components/slider-verify"},{"title":"LTianaiCaptcha-高级滑块验证","link":"/components/Tianai-Captcha"},{"title":"LRightMenu-右键菜单","link":"/components/Right-Menu"},{"title":"LColor-颜色选择","link":"/components/color-pick"}]},{"title":"数据展示","children":[{"title":"LECharts-echarts容器组件","link":"/components/Echarts"},{"title":"LTable-高级表格","link":"/components/table"},{"title":"LEditTable-高级编辑表格","link":"/components/edit-table"},{"title":"LDescriptions-高级描述列表","link":"/components/descriptions"},{"title":"LList-高级列表","link":"/components/list"},{"title":"LSeamlessScroll-无缝滚动","link":"/components/seamless-scroll"},{"title":"LCollapseCard-折叠卡片","link":"/components/collapse-card"},{"title":"LScrollBar-滚动条","link":"/components/scroll-bar"},{"title":"LTreeTable-树表格","link":"/components/tree-table"},{"title":"LH5Preview-H5预览","link":"/components/h5-preview"},{"title":"LEllipsisText-文本省略","link":"/components/Ellipsis-Text"},{"title":"LHighlightText-文本高亮","link":"/components/Highlight-Text"},{"title":"LSkeleton-高级骨架屏","link":"/components/Skeleton"}]},{"title":"高级表单","children":[{"title":"LForm-高级表单","link":"/components/form"},{"title":"LModalForm-高级弹窗表单","link":"/components/modal-form"},{"title":"LDrawerForm-高级抽屉表单","link":"/components/drawer-form"},{"title":"LQueryForm-高级查询表单","link":"/components/query-form"},{"title":"LStepsForm-高级步骤表单","link":"/components/steps-form"},{"title":"LLoginForm-高级登录表单","link":"/components/login-form"},{"title":"LListForm-高级动态表单项","link":"/components/list-form"}]},{"title":"高级表单项","children":[{"title":"LFormItem-高级表单项","link":"/components/form-item"},{"title":"Input-输入框","link":"/components/form-item-input"},{"title":"Number-数字输入框","link":"/components/form-item-number"},{"title":"NumberRange-数字范围输入框","link":"/components/form-item-number-range"},{"title":"Password-密码输入框","link":"/components/form-item-password"},{"title":"TextArea-多行输入框","link":"/components/form-item-text-area"},{"title":"Captcha-验证码输入框","link":"/components/form-item-captcha"},{"title":"AutoComplete-联想输入框","link":"/components/form-item-auto-complete"},{"title":"Mentions-提及输入框","link":"/components/form-item-mentions"},{"title":"Select-下拉框","link":"/components/form-item-select"},{"title":"Checkbox-多选框","link":"/components/form-item-checkbox"},{"title":"Radio-单选框","link":"/components/form-item-radio"},{"title":"Cascader-级联选择","link":"/components/form-item-cascader"},{"title":"TreeSelect-树形选择","link":"/components/form-item-tree-select"},{"title":"Address-组合选择","link":"/components/form-item-address"},{"title":"Color-颜色选择","link":"/components/form-item-color"},{"title":"Switch-开关选择","link":"/components/form-item-switch"},{"title":"DatePicker-日期选择","link":"/components/form-item-date-picker"},{"title":"TimePicker-时间选择","link":"/components/form-item-time-picker"},{"title":"Slider-滑动条选择","link":"/components/form-item-slider"},{"title":"Icon-图标选择","link":"/components/form-item-icon"},{"title":"Segmented-分段器选择","link":"/components/form-item-segmented"},{"title":"Rate-评分选择","link":"/components/form-item-rate"},{"title":"Upload-文件上传","link":"/components/form-item-upload"},{"title":"Transfer-穿梭框","link":"/components/form-item-transfer"}]}],"/scene":[{"children":[{"title":"场景案例","link":"/scene"}]},{"children":[{"title":"表格数据的导出","link":"/scene/table-Export"},{"title":"解析 Excel 数据成 JSON","link":"/scene/excel-Import"},{"title":"Mock 模拟数据","link":"/scene/mockjs"},{"title":"下载文件","link":"/scene/download"},{"title":"大屏适配","link":"/scene/big-Screen"}]}]},"sourceLink":"https://github.com/llq0802/lighting-design/tree/v2/{fileName}#L{line}","editLink":"https://github.com/llq0802/lighting-design/edit/v2/{filename}"};
const _2_level_nav_available = true;

export default function DumiContextWrapper() {
  const outlet = useOutlet();
  const [loading, setLoading] = useState(false);
  const prev = useRef(history.location.pathname);

  useEffect(() => {
    return history.listen((next) => {
      if (next.location.pathname !== prev.current) {
        prev.current = next.location.pathname;

        // scroll to top when route changed
        document.documentElement.scrollTo(0, 0);
      }
    });
  }, []);

  const context: ISiteContext = React.useMemo(() => {
    const ctx = {
      pkg,
      historyType,
      entryExports,
      demos: null,
      components,
      locales,
      loading,
      setLoading,
      hostname,
      themeConfig,
      _2_level_nav_available,
    };

    // Proxy do not warning since `Object.keys` will get nothing to loop
    Object.defineProperty(ctx, 'demos', {
      get: () => {
        warning(false, '`demos` return empty in latest version, please use `useDemo` instead.');
        return {};
      },
    });

    return ctx;
  }, [
    pkg,
    historyType,
    entryExports,
    components,
    locales,
    loading,
    setLoading,
    hostname,
    themeConfig,
    _2_level_nav_available,
  ]);

  return (
    <SiteContext.Provider value={context}>
      {outlet}
    </SiteContext.Provider>
  );
}
